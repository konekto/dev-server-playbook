---
- name: Create folder for NextCloud
  become: yes
  file:
    path: "{{services_folder}}/nextcloud/{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "data"

- name: Create new ssl certificate for NextCloud
  become: yes
  shell: letsencrypt certonly --agree-tos --email {{ letsencrypt_email }} --keep-until-expiring -n --standalone --standalone-supported-challenges http-01 -d {{ nextcloud_domain }}
  when: enable_letsencrypt

- name: Create new ssl certificate for DocumentServer
  become: yes
  shell: letsencrypt certonly --agree-tos --email {{ letsencrypt_email }} --keep-until-expiring -n --standalone --standalone-supported-challenges tls-sni-01 -d {{ nextcloud_onlyfoffice_ds_domain }}
  when: enable_letsencrypt

- name: Create docker compose file from template
  become: yes
  template:
    src: tasks/install-nextcloud/templates/docker-compose.yml
    dest: "{{services_folder}}/nextcloud/docker-compose.yml"
    owner: "{{ansible_env.USER}}"

- name: Start docker Nextcloud with the OnlyOffice DocumentServer
  shell: docker-compose up -d chdir="{{services_folder}}/nextcloud" creates=/tmp/started-nextcloud-docker-compose

- name: Get Docker IP from Nextcloud container
  shell: "docker inspect --format='{{ '{{' }}range .NetworkSettings.Networks{{ '}}' }}{{ '{{' }}.IPAddress{{ '}}' }}{{ '{{' }}end{{ '}}' }}' nextcloud-app"
  register: nextcloud_container

- name: Get Docker IP from DocumentServer container
  shell: "docker inspect --format='{{ '{{' }}range .NetworkSettings.Networks{{ '}}' }}{{ '{{' }}.IPAddress{{ '}}' }}{{ '{{' }}end{{ '}}' }}' onlyoffice-documentserver"
  register: documentserver_container

- debug: var=nextcloud_container
- debug: var=documentserver_container

- set_fact:
    nextcloud_docker_ip: "{{nextcloud_container.stdout}}"
    documentserver_docker_ip: "{{documentserver_container.stdout}}"

- name: Create NextCloud nginx conf from template
  become: yes
  template: src=tasks/install-nextcloud/templates/nextcloud.conf dest=/etc/nginx/sites-available/nextcloud.conf

- name: Create link of nginx conf
  become: yes
  file: src=/etc/nginx/sites-available/nextcloud.conf dest=/etc/nginx/sites-enabled/nextcloud.conf state=link
  notify:
    - restart nginx

- name : Create backup script from template file
  become: yes
  template:
    src: tasks/install-nextcloud/templates/backup.sh
    dest: "{{services_folder}}/nextcloud/backup.sh"
    mode: "0744"
    owner: "{{ansible_user}}"

- name: Create crontab for backup script
  become: yes
  cron:
    name: "nextcloud-backup-script"
    minute: "15"
    hour:  "3"
    job: "{{services_folder}}/nextcloud/backup.sh"
    user: "root"

- name: Create nextcloud backup folder
  file:
    state: directory
    owner: "{{ansible_user}}"
    mode: "0774"
    path: "{{GLOBAL_BACKUP_FOLDER}}/nextcloud"
